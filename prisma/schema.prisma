generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Profile {
  id String @id @default(uuid())
  firstName String
  lastName String

  player Player?
  official Official?
  coach Coach?
}

model Player {
  id String @id @default(uuid())
  
  profile Profile @relation(fields: [profileId], references: [id])
  profileId String @unique
}

model PlayerPosition {
  id String @id @default(uuid())
  number Int @unique
  name String
  description String

  assignments PlayerAssignment[]
}

model PlayerAssignment {
  id String @id @default(uuid())

  team Team @relation(fields: [teamId], references: [id])
  teamId String

  playerPosition PlayerPosition @relation(fields: [playerPositionId], references: [id])
  playerPositionId String
}

model Official {
  id String @id @default(uuid())

  profile Profile @relation(fields: [profileId], references: [id])
  profileId String @unique

  assignments OfficialAssignment[]
}

model OfficialRole {
  id String @id @default(uuid())
  name String @unique
  description String

  assignments OfficialAssignment[]
}
model OfficialAssignment {
  id String @id @default(uuid())

  match Match @relation(fields: [matchId], references: [id])
  matchId String

  official Official @relation(fields: [officialId], references: [id])
  officialId String

  role OfficialRole @relation(fields: [roleId], references: [id])
  roleId String
}

model Coach {
  id String @id @default(uuid())

  profile Profile @relation(fields: [profileId], references: [id])
  profileId String @unique
}

model Club {
  id String @id @default(uuid())

  name String @unique
}

model Team {
  id String @id @default(uuid())

  playerAssignments PlayerAssignment[]
}

model Match {
  id String @id @default(uuid())

  officialAssignments OfficialAssignment[]
}